test {
    useJUnitPlatform()

    outputs.upToDateWhen { false }  // Always run tests
    maxParallelForks = 1

    // Set active profile to test
    systemProperty "spring.profiles.active", "test,h2"

    // spock reports https://github.com/renatoathaydes/spock-reports
    systemProperty 'com.athaydes.spockframework.report.internal.HtmlReportCreator.specSummaryNameOption', 'title'
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacoco {
    toolVersion = "${jacocoVersion}"
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }

    afterEvaluate {
        getClassDirectories().setFrom(getJacocoExcludedFiles(classDirectories))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'INSTRUCTION'
                minimum = 0.8
            }
            limit {
                counter = 'BRANCH'
                minimum = 0.4
            }
            limit {
                counter = 'LINE'
                minimum = 0.9
            }
            limit {
                counter = 'COMPLEXITY'
                minimum = 0.7
            }
            limit {
                counter = 'METHOD'
                minimum = 0.8
            }
            limit {
                counter = 'CLASS'
                minimum = 1.0
            }
        }
    }

    afterEvaluate {
        getClassDirectories().setFrom(getJacocoExcludedFiles(classDirectories))
    }
}

def getJacocoExcludedFiles(classDirectories) {
    files(classDirectories.files.collect {
        fileTree(dir: it, exclude: [
                'com/telecom/customer/TelecomApp.**'
        ])
    })
}